package com.example.accessingdatamysql;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private DepartmentRepository departmentRepository;

    @PostMapping(path="/add/user") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name, @RequestParam String l_name) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setLName(l_name);
        userRepository.save(n);
        return "Saved";
    }

    @PostMapping(path="/add/department")
    public @ResponseBody String addNewDep(@RequestParam String name, @RequestParam String depHead){
        Department d = new Department();
        d.setName(name);
        d.setDepHead(depHead);
        departmentRepository.save(d);
        return "Saved";
    }



    @GetMapping(path="/user/all")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    @GetMapping(path="/department/all")
    public @ResponseBody Iterable<Department> getAllDepartment(){
        return  departmentRepository.findAll();
    }

    @GetMapping(path="/error")
    public @ResponseBody String getError(){
        return "Its an error!!!";
    }

}